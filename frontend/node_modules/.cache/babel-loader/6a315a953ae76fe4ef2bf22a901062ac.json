{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst ms = require('ms');\n\nconst mpath = require('mpath');\n\nconst sliced = require('sliced');\n\nconst Buffer = require('safe-buffer').Buffer;\n\nconst Decimal = require('./types/decimal128');\n\nconst ObjectId = require('./types/objectid');\n\nconst PopulateOptions = require('./options/PopulateOptions');\n\nconst clone = require('./helpers/clone');\n\nconst immediate = require('./helpers/immediate');\n\nconst isObject = require('./helpers/isObject');\n\nconst isBsonType = require('./helpers/isBsonType');\n\nconst getFunctionName = require('./helpers/getFunctionName');\n\nconst isMongooseObject = require('./helpers/isMongooseObject');\n\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\n\nconst schemaMerge = require('./helpers/schema/merge');\n\nconst specialProperties = require('./helpers/specialProperties');\n\nlet Document;\nexports.specialProperties = specialProperties;\n/*!\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function (name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n\n  if (name === 'system.indexes') {\n    return name;\n  }\n\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n\n  return name;\n};\n/*!\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' && typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID') || isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128')) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.global === b.global;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map && b instanceof Map) {\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) && deepEqual(Array.from(a.values()), Array.from(b.values()));\n  } // Handle MongooseNumbers\n\n\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    const len = a.length;\n\n    if (len !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (kaLength !== kb.length) {\n    return false;\n  } // the same set of keys (although not necessarily the same order),\n\n\n  ka.sort();\n  kb.sort(); // ~~~cheap key test\n\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  } // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n\n\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/*!\n * Get the last element of an array\n */\n\n\nexports.last = function (arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n\n  return void 0;\n};\n\nexports.clone = clone;\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n\n  for (const key of keys) {\n    delete ret[key];\n  }\n\n  return ret;\n};\n/*!\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} options\n * @return {Object} the merged object\n * @api private\n */\n\n\nexports.options = function (defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n  options = options || {};\n\n  while (i--) {\n    k = keys[i];\n\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n\n  return options;\n};\n/*!\n * Generates a random string\n *\n * @api private\n */\n\n\nexports.random = function () {\n  return Math.random().toString().substr(3);\n};\n/*!\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n\n    if (omitNested[path]) {\n      continue;\n    }\n\n    if (specialProperties.has(key)) {\n      continue;\n    }\n\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge && from[key].$isSingleNested && to[key].$isMongooseDocumentArray || from[key].$isMongooseDocumentArray && to[key].$isSingleNested) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n\n          continue;\n        } else if (from[key] instanceof ObjectId) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n/*!\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n/*!\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(arg); // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n\n  return !proto || proto.constructor.name === 'Object';\n};\n/*!\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n */\n\n\nexports.isNativeObject = function (arg) {\n  return Array.isArray(arg) || arg instanceof Date || arg instanceof Boolean || arg instanceof Number || arg instanceof String;\n};\n/*!\n * Determines if `val` is an object that has no own keys\n */\n\n\nexports.isEmptyObject = function (val) {\n  return val != null && typeof val === 'object' && Object.keys(val).length === 0;\n};\n/*!\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n */\n\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/*!\n * A faster Array.prototype.slice.call(arguments) alternative\n * @api private\n */\n\n\nexports.args = sliced;\n/*!\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  return function () {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function () {\n        throw err;\n      });\n    }\n  };\n};\n/*!\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n */\n\n\nexports.isMongooseType = function (v) {\n  return v instanceof ObjectId || v instanceof Decimal || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n/*!\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n\n  if (!('expires' in object)) {\n    return;\n  }\n\n  let when;\n\n  if (typeof object.expires !== 'string') {\n    when = object.expires;\n  } else {\n    when = Math.round(ms(object.expires) / 1000);\n  }\n\n  object.expireAfterSeconds = when;\n  delete object.expires;\n};\n/*!\n * populate helper\n */\n\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = {\n        path: path\n      };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj); // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function (obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function (p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function (obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function (p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = obj.path.split(' ');\n\n  if (obj.options != null) {\n    obj.options = exports.clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, {\n      path: path\n    })));\n  }\n\n  return ret;\n}\n/*!\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n */\n\n\nexports.getValue = function (path, obj, map) {\n  return mpath.get(path, obj, '_doc', map);\n};\n/*!\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n */\n\n\nexports.setValue = function (path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n/*!\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @private\n */\n\n\nexports.object = {};\n\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n/*!\n * @see exports.options\n */\n\n\nexports.object.shallowCopy = exports.options;\n/*!\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nconst hop = Object.prototype.hasOwnProperty;\n\nexports.object.hasOwnProperty = function (obj, prop) {\n  return hop.call(obj, prop);\n};\n/*!\n * Determine if `val` is null or undefined\n *\n * @return {Boolean}\n */\n\n\nexports.isNullOrUndefined = function (val) {\n  return val === null || val === undefined;\n};\n/*!\n * ignore\n */\n\n\nexports.array = {};\n/*!\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @return {Array}\n * @private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n  arr.forEach(function (item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n  return ret;\n};\n/*!\n * ignore\n */\n\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function (obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n/*!\n * ignore\n */\n\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function (val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n/*!\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @private\n */\n\n\nexports.array.unique = function (arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n\n      ret.push(item);\n      primitives.add(item);\n    } else if (item instanceof ObjectId) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n/*!\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\n\nexports.buffer = {};\n\nexports.buffer.areEqual = function (a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n/*!\n * Decorate buffers\n */\n\nexports.decorate = function (destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n\n    destination[key] = source[key];\n  }\n};\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\n\nexports.mergeClone = function (to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n\n    if (specialProperties.has(key)) {\n      continue;\n    }\n\n    if (typeof to[key] === 'undefined') {\n      to[key] = exports.clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n\n      if (exports.isObject(val)) {\n        let obj = val;\n\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = exports.clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\n\nexports.each = function (arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n/*!\n * ignore\n */\n\n\nexports.getOption = function (name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n/*!\n * ignore\n */\n\n\nexports.noop = function () {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n\n  return ret;\n};","map":{"version":3,"sources":["/home/lucho/Desktop/Heros-SPA/node_modules/mongoose/lib/utils.js"],"names":["ms","require","mpath","sliced","Buffer","Decimal","ObjectId","PopulateOptions","clone","immediate","isObject","isBsonType","getFunctionName","isMongooseObject","promiseOrCallback","schemaMerge","specialProperties","Document","exports","toCollectionName","name","pluralize","deepEqual","a","b","Date","getTime","toString","RegExp","source","ignoreCase","multiline","global","prototype","Map","Array","from","keys","values","Number","valueOf","isBuffer","buffer","areEqual","isArray","len","length","i","$__","_doc","toObject","ka","Object","kb","kaLength","sort","key","last","arr","omit","obj","assign","ret","options","defaults","k","random","Math","substr","merge","to","path","omitNested","has","isDiscriminatorSchemaMerge","$isSingleNested","$isMongooseDocumentArray","instanceOfSchema","overwrite","doc","push","isPOJO","arg","proto","getPrototypeOf","constructor","isNativeObject","Boolean","String","isEmptyObject","val","hasKey","props","prop","args","tick","callback","apply","arguments","err","isMongooseType","v","expires","object","when","round","expireAfterSeconds","populate","select","model","match","subPopulate","justOne","count","singles","makeSingles","map","o","TypeError","_populateObj","forEach","test","paths","split","p","copy","getValue","get","setValue","_copying","set","vals","shallowCopy","hop","hasOwnProperty","call","isNullOrUndefined","undefined","array","flatten","filter","item","_hasOwnProperty","hasUserDefinedProperty","MAX_ARRAY_INDEX","pow","isArrayIndex","unique","primitives","Set","ids","add","decorate","destination","mergeClone","fromObj","transform","virtuals","depopulate","getters","flattenDecimals","isMongooseBuffer","each","fn","getOption","sources","slice","noop","errorToPOJO","error","isError","Error","properyName","getOwnPropertyNames"],"mappings":"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","sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ms = require('ms');\nconst mpath = require('mpath');\nconst sliced = require('sliced');\nconst Buffer = require('safe-buffer').Buffer;\nconst Decimal = require('./types/decimal128');\nconst ObjectId = require('./types/objectid');\nconst PopulateOptions = require('./options/PopulateOptions');\nconst clone = require('./helpers/clone');\nconst immediate = require('./helpers/immediate');\nconst isObject = require('./helpers/isObject');\nconst isBsonType = require('./helpers/isBsonType');\nconst getFunctionName = require('./helpers/getFunctionName');\nconst isMongooseObject = require('./helpers/isMongooseObject');\nconst promiseOrCallback = require('./helpers/promiseOrCallback');\nconst schemaMerge = require('./helpers/schema/merge');\nconst specialProperties = require('./helpers/specialProperties');\n\nlet Document;\n\nexports.specialProperties = specialProperties;\n\n/*!\n * Produces a collection name from model `name`. By default, just returns\n * the model name\n *\n * @param {String} name a model name\n * @param {Function} pluralize function that pluralizes the collection name\n * @return {String} a collection name\n * @api private\n */\n\nexports.toCollectionName = function(name, pluralize) {\n  if (name === 'system.profile') {\n    return name;\n  }\n  if (name === 'system.indexes') {\n    return name;\n  }\n  if (typeof pluralize === 'function') {\n    return pluralize(name);\n  }\n  return name;\n};\n\n/*!\n * Determines if `a` and `b` are deep equal.\n *\n * Modified from node/lib/assert.js\n *\n * @param {any} a a value to compare to `b`\n * @param {any} b a value to compare to `a`\n * @return {Boolean}\n * @api private\n */\n\nexports.deepEqual = function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' && typeof b !== 'object') {\n    return a === b;\n  }\n\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  if ((isBsonType(a, 'ObjectID') && isBsonType(b, 'ObjectID')) ||\n      (isBsonType(a, 'Decimal128') && isBsonType(b, 'Decimal128'))) {\n    return a.toString() === b.toString();\n  }\n\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source &&\n        a.ignoreCase === b.ignoreCase &&\n        a.multiline === b.multiline &&\n        a.global === b.global;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  if (a instanceof Map && b instanceof Map) {\n    return deepEqual(Array.from(a.keys()), Array.from(b.keys())) &&\n      deepEqual(Array.from(a.values()), Array.from(b.values()));\n  }\n\n  // Handle MongooseNumbers\n  if (a instanceof Number && b instanceof Number) {\n    return a.valueOf() === b.valueOf();\n  }\n\n  if (Buffer.isBuffer(a)) {\n    return exports.buffer.areEqual(a, b);\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    const len = a.length;\n    if (len !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < len; ++i) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if (a.$__ != null) {\n    a = a._doc;\n  } else if (isMongooseObject(a)) {\n    a = a.toObject();\n  }\n\n  if (b.$__ != null) {\n    b = b._doc;\n  } else if (isMongooseObject(b)) {\n    b = b.toObject();\n  }\n\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  const kaLength = ka.length;\n\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (kaLength !== kb.length) {\n    return false;\n  }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n\n  // ~~~cheap key test\n  for (let i = kaLength - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) {\n      return false;\n    }\n  }\n\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (const key of ka) {\n    if (!deepEqual(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/*!\n * Get the last element of an array\n */\n\nexports.last = function(arr) {\n  if (arr.length > 0) {\n    return arr[arr.length - 1];\n  }\n  return void 0;\n};\n\nexports.clone = clone;\n\n/*!\n * ignore\n */\n\nexports.promiseOrCallback = promiseOrCallback;\n\n/*!\n * ignore\n */\n\nexports.omit = function omit(obj, keys) {\n  if (keys == null) {\n    return Object.assign({}, obj);\n  }\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  const ret = Object.assign({}, obj);\n  for (const key of keys) {\n    delete ret[key];\n  }\n  return ret;\n};\n\n\n/*!\n * Shallow copies defaults into options.\n *\n * @param {Object} defaults\n * @param {Object} options\n * @return {Object} the merged object\n * @api private\n */\n\nexports.options = function(defaults, options) {\n  const keys = Object.keys(defaults);\n  let i = keys.length;\n  let k;\n\n  options = options || {};\n\n  while (i--) {\n    k = keys[i];\n    if (!(k in options)) {\n      options[k] = defaults[k];\n    }\n  }\n\n  return options;\n};\n\n/*!\n * Generates a random string\n *\n * @api private\n */\n\nexports.random = function() {\n  return Math.random().toString().substr(3);\n};\n\n/*!\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.merge = function merge(to, from, options, path) {\n  options = options || {};\n\n  const keys = Object.keys(from);\n  let i = 0;\n  const len = keys.length;\n  let key;\n\n  path = path || '';\n  const omitNested = options.omitNested || {};\n\n  while (i < len) {\n    key = keys[i++];\n    if (options.omit && options.omit[key]) {\n      continue;\n    }\n    if (omitNested[path]) {\n      continue;\n    }\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (to[key] == null) {\n      to[key] = from[key];\n    } else if (exports.isObject(from[key])) {\n      if (!exports.isObject(to[key])) {\n        to[key] = {};\n      }\n      if (from[key] != null) {\n        // Skip merging schemas if we're creating a discriminator schema and\n        // base schema has a given path as a single nested but discriminator schema\n        // has the path as a document array, or vice versa (gh-9534)\n        if (options.isDiscriminatorSchemaMerge &&\n            (from[key].$isSingleNested && to[key].$isMongooseDocumentArray) ||\n            (from[key].$isMongooseDocumentArray && to[key].$isSingleNested)) {\n          continue;\n        } else if (from[key].instanceOfSchema) {\n          if (to[key].instanceOfSchema) {\n            schemaMerge(to[key], from[key].clone(), options.isDiscriminatorSchemaMerge);\n          } else {\n            to[key] = from[key].clone();\n          }\n          continue;\n        } else if (from[key] instanceof ObjectId) {\n          to[key] = new ObjectId(from[key]);\n          continue;\n        }\n      }\n      merge(to[key], from[key], options, path ? path + '.' + key : key);\n    } else if (options.overwrite) {\n      to[key] = from[key];\n    }\n  }\n};\n\n/*!\n * Applies toObject recursively.\n *\n * @param {Document|Array|Object} obj\n * @return {Object}\n * @api private\n */\n\nexports.toObject = function toObject(obj) {\n  Document || (Document = require('./document'));\n  let ret;\n\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Document) {\n    return obj.toObject();\n  }\n\n  if (Array.isArray(obj)) {\n    ret = [];\n\n    for (const doc of obj) {\n      ret.push(toObject(doc));\n    }\n\n    return ret;\n  }\n\n  if (exports.isPOJO(obj)) {\n    ret = {};\n\n    for (const k of Object.keys(obj)) {\n      if (specialProperties.has(k)) {\n        continue;\n      }\n      ret[k] = toObject(obj[k]);\n    }\n\n    return ret;\n  }\n\n  return obj;\n};\n\nexports.isObject = isObject;\n\n/*!\n * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,\n * `arg` must be an object but not an instance of any special class, like String,\n * ObjectId, etc.\n *\n * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @api private\n * @return {Boolean}\n */\n\nexports.isPOJO = function isPOJO(arg) {\n  if (arg == null || typeof arg !== 'object') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(arg);\n  // Prototype may be null if you used `Object.create(null)`\n  // Checking `proto`'s constructor is safe because `getPrototypeOf()`\n  // explicitly crosses the boundary from object data to object metadata\n  return !proto || proto.constructor.name === 'Object';\n};\n\n/*!\n * Determines if `obj` is a built-in object like an array, date, boolean,\n * etc.\n */\n\nexports.isNativeObject = function(arg) {\n  return Array.isArray(arg) ||\n    arg instanceof Date ||\n    arg instanceof Boolean ||\n    arg instanceof Number ||\n    arg instanceof String;\n};\n\n/*!\n * Determines if `val` is an object that has no own keys\n */\n\nexports.isEmptyObject = function(val) {\n  return val != null &&\n    typeof val === 'object' &&\n    Object.keys(val).length === 0;\n};\n\n/*!\n * Search if `obj` or any POJOs nested underneath `obj` has a property named\n * `key`\n */\n\nexports.hasKey = function hasKey(obj, key) {\n  const props = Object.keys(obj);\n  for (const prop of props) {\n    if (prop === key) {\n      return true;\n    }\n    if (exports.isPOJO(obj[prop]) && exports.hasKey(obj[prop], key)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/*!\n * A faster Array.prototype.slice.call(arguments) alternative\n * @api private\n */\n\nexports.args = sliced;\n\n/*!\n * process.nextTick helper.\n *\n * Wraps `callback` in a try/catch + nextTick.\n *\n * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.\n *\n * @param {Function} callback\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  return function() {\n    try {\n      callback.apply(this, arguments);\n    } catch (err) {\n      // only nextTick on err to get out of\n      // the event loop and avoid state corruption.\n      immediate(function() {\n        throw err;\n      });\n    }\n  };\n};\n\n/*!\n * Returns true if `v` is an object that can be serialized as a primitive in\n * MongoDB\n */\n\nexports.isMongooseType = function(v) {\n  return v instanceof ObjectId || v instanceof Decimal || v instanceof Buffer;\n};\n\nexports.isMongooseObject = isMongooseObject;\n\n/*!\n * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.\n *\n * @param {Object} object\n * @api private\n */\n\nexports.expires = function expires(object) {\n  if (!(object && object.constructor.name === 'Object')) {\n    return;\n  }\n  if (!('expires' in object)) {\n    return;\n  }\n\n  let when;\n  if (typeof object.expires !== 'string') {\n    when = object.expires;\n  } else {\n    when = Math.round(ms(object.expires) / 1000);\n  }\n  object.expireAfterSeconds = when;\n  delete object.expires;\n};\n\n/*!\n * populate helper\n */\n\nexports.populate = function populate(path, select, model, match, options, subPopulate, justOne, count) {\n  // might have passed an object specifying all arguments\n  let obj = null;\n  if (arguments.length === 1) {\n    if (path instanceof PopulateOptions) {\n      return [path];\n    }\n\n    if (Array.isArray(path)) {\n      const singles = makeSingles(path);\n      return singles.map(o => exports.populate(o)[0]);\n    }\n\n    if (exports.isObject(path)) {\n      obj = Object.assign({}, path);\n    } else {\n      obj = { path: path };\n    }\n  } else if (typeof model === 'object') {\n    obj = {\n      path: path,\n      select: select,\n      match: model,\n      options: match\n    };\n  } else {\n    obj = {\n      path: path,\n      select: select,\n      model: model,\n      match: match,\n      options: options,\n      populate: subPopulate,\n      justOne: justOne,\n      count: count\n    };\n  }\n\n  if (typeof obj.path !== 'string') {\n    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');\n  }\n\n  return _populateObj(obj);\n\n  // The order of select/conditions args is opposite Model.find but\n  // necessary to keep backward compatibility (select could be\n  // an array, string, or object literal).\n  function makeSingles(arr) {\n    const ret = [];\n    arr.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const paths = obj.path.split(' ');\n        paths.forEach(function(p) {\n          const copy = Object.assign({}, obj);\n          copy.path = p;\n          ret.push(copy);\n        });\n      } else {\n        ret.push(obj);\n      }\n    });\n\n    return ret;\n  }\n};\n\nfunction _populateObj(obj) {\n  if (Array.isArray(obj.populate)) {\n    const ret = [];\n    obj.populate.forEach(function(obj) {\n      if (/[\\s]/.test(obj.path)) {\n        const copy = Object.assign({}, obj);\n        const paths = copy.path.split(' ');\n        paths.forEach(function(p) {\n          copy.path = p;\n          ret.push(exports.populate(copy)[0]);\n        });\n      } else {\n        ret.push(exports.populate(obj)[0]);\n      }\n    });\n    obj.populate = exports.populate(ret);\n  } else if (obj.populate != null && typeof obj.populate === 'object') {\n    obj.populate = exports.populate(obj.populate);\n  }\n\n  const ret = [];\n  const paths = obj.path.split(' ');\n  if (obj.options != null) {\n    obj.options = exports.clone(obj.options);\n  }\n\n  for (const path of paths) {\n    ret.push(new PopulateOptions(Object.assign({}, obj, { path: path })));\n  }\n\n  return ret;\n}\n\n/*!\n * Return the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Object} obj\n */\n\nexports.getValue = function(path, obj, map) {\n  return mpath.get(path, obj, '_doc', map);\n};\n\n/*!\n * Sets the value of `obj` at the given `path`.\n *\n * @param {String} path\n * @param {Anything} val\n * @param {Object} obj\n */\n\nexports.setValue = function(path, val, obj, map, _copying) {\n  mpath.set(path, val, obj, '_doc', map, _copying);\n};\n\n/*!\n * Returns an array of values from object `o`.\n *\n * @param {Object} o\n * @return {Array}\n * @private\n */\n\nexports.object = {};\nexports.object.vals = function vals(o) {\n  const keys = Object.keys(o);\n  let i = keys.length;\n  const ret = [];\n\n  while (i--) {\n    ret.push(o[keys[i]]);\n  }\n\n  return ret;\n};\n\n/*!\n * @see exports.options\n */\n\nexports.object.shallowCopy = exports.options;\n\n/*!\n * Safer helper for hasOwnProperty checks\n *\n * @param {Object} obj\n * @param {String} prop\n */\n\nconst hop = Object.prototype.hasOwnProperty;\nexports.object.hasOwnProperty = function(obj, prop) {\n  return hop.call(obj, prop);\n};\n\n/*!\n * Determine if `val` is null or undefined\n *\n * @return {Boolean}\n */\n\nexports.isNullOrUndefined = function(val) {\n  return val === null || val === undefined;\n};\n\n/*!\n * ignore\n */\n\nexports.array = {};\n\n/*!\n * Flattens an array.\n *\n * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]\n *\n * @param {Array} arr\n * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.\n * @return {Array}\n * @private\n */\n\nexports.array.flatten = function flatten(arr, filter, ret) {\n  ret || (ret = []);\n\n  arr.forEach(function(item) {\n    if (Array.isArray(item)) {\n      flatten(item, filter, ret);\n    } else {\n      if (!filter || filter(item)) {\n        ret.push(item);\n      }\n    }\n  });\n\n  return ret;\n};\n\n/*!\n * ignore\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexports.hasUserDefinedProperty = function(obj, key) {\n  if (obj == null) {\n    return false;\n  }\n\n  if (Array.isArray(key)) {\n    for (const k of key) {\n      if (exports.hasUserDefinedProperty(obj, k)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if (_hasOwnProperty.call(obj, key)) {\n    return true;\n  }\n  if (typeof obj === 'object' && key in obj) {\n    const v = obj[key];\n    return v !== Object.prototype[key] && v !== Array.prototype[key];\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nconst MAX_ARRAY_INDEX = Math.pow(2, 32) - 1;\n\nexports.isArrayIndex = function(val) {\n  if (typeof val === 'number') {\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n  if (typeof val === 'string') {\n    if (!/^\\d+$/.test(val)) {\n      return false;\n    }\n    val = +val;\n    return val >= 0 && val <= MAX_ARRAY_INDEX;\n  }\n\n  return false;\n};\n\n/*!\n * Removes duplicate values from an array\n *\n * [1, 2, 3, 3, 5] => [1, 2, 3, 5]\n * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]\n *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]\n *\n * @param {Array} arr\n * @return {Array}\n * @private\n */\n\nexports.array.unique = function(arr) {\n  const primitives = new Set();\n  const ids = new Set();\n  const ret = [];\n\n  for (const item of arr) {\n    if (typeof item === 'number' || typeof item === 'string' || item == null) {\n      if (primitives.has(item)) {\n        continue;\n      }\n      ret.push(item);\n      primitives.add(item);\n    } else if (item instanceof ObjectId) {\n      if (ids.has(item.toString())) {\n        continue;\n      }\n      ret.push(item);\n      ids.add(item.toString());\n    } else {\n      ret.push(item);\n    }\n  }\n\n  return ret;\n};\n\n/*!\n * Determines if two buffers are equal.\n *\n * @param {Buffer} a\n * @param {Object} b\n */\n\nexports.buffer = {};\nexports.buffer.areEqual = function(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    return false;\n  }\n  if (!Buffer.isBuffer(b)) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0, len = a.length; i < len; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.getFunctionName = getFunctionName;\n/*!\n * Decorate buffers\n */\n\nexports.decorate = function(destination, source) {\n  for (const key in source) {\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    destination[key] = source[key];\n  }\n};\n\n/**\n * merges to with a copy of from\n *\n * @param {Object} to\n * @param {Object} fromObj\n * @api private\n */\n\nexports.mergeClone = function(to, fromObj) {\n  if (isMongooseObject(fromObj)) {\n    fromObj = fromObj.toObject({\n      transform: false,\n      virtuals: false,\n      depopulate: true,\n      getters: false,\n      flattenDecimals: false\n    });\n  }\n  const keys = Object.keys(fromObj);\n  const len = keys.length;\n  let i = 0;\n  let key;\n\n  while (i < len) {\n    key = keys[i++];\n    if (specialProperties.has(key)) {\n      continue;\n    }\n    if (typeof to[key] === 'undefined') {\n      to[key] = exports.clone(fromObj[key], {\n        transform: false,\n        virtuals: false,\n        depopulate: true,\n        getters: false,\n        flattenDecimals: false\n      });\n    } else {\n      let val = fromObj[key];\n      if (val != null && val.valueOf && !(val instanceof Date)) {\n        val = val.valueOf();\n      }\n      if (exports.isObject(val)) {\n        let obj = val;\n        if (isMongooseObject(val) && !val.isMongooseBuffer) {\n          obj = obj.toObject({\n            transform: false,\n            virtuals: false,\n            depopulate: true,\n            getters: false,\n            flattenDecimals: false\n          });\n        }\n        if (val.isMongooseBuffer) {\n          obj = Buffer.from(obj);\n        }\n        exports.mergeClone(to[key], obj);\n      } else {\n        to[key] = exports.clone(val, {\n          flattenDecimals: false\n        });\n      }\n    }\n  }\n};\n\n/**\n * Executes a function on each element of an array (like _.each)\n *\n * @param {Array} arr\n * @param {Function} fn\n * @api private\n */\n\nexports.each = function(arr, fn) {\n  for (const item of arr) {\n    fn(item);\n  }\n};\n\n/*!\n * ignore\n */\n\nexports.getOption = function(name) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n\n  for (const source of sources) {\n    if (source[name] != null) {\n      return source[name];\n    }\n  }\n\n  return null;\n};\n\n/*!\n * ignore\n */\n\nexports.noop = function() {};\n\nexports.errorToPOJO = function errorToPOJO(error) {\n  const isError = error instanceof Error;\n  if (!isError) {\n    throw new Error('`error` must be `instanceof Error`.');\n  }\n\n  const ret = {};\n  for (const properyName of Object.getOwnPropertyNames(error)) {\n    ret[properyName] = error[properyName];\n  }\n  return ret;\n};"]},"metadata":{},"sourceType":"script"}