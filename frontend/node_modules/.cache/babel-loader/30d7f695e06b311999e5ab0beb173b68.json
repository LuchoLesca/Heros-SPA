{"ast":null,"code":"'use strict';\n\nconst Document = require('../document');\n\nconst immediate = require('../helpers/immediate');\n\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\n\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nmodule.exports = Subdocument;\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  this.$isSingleNested = true;\n\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n\n  const hasPriorDoc = options != null && options.priorDoc;\n  let initedPaths = null;\n\n  if (hasPriorDoc) {\n    this._doc = Object.assign({}, options.priorDoc._doc);\n    delete this._doc[this.$__schema.options.discriminatorKey];\n    initedPaths = Object.keys(options.priorDoc._doc || {}).filter(key => key !== this.$__schema.options.discriminatorKey);\n  }\n\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    options = Object.assign({}, options, {\n      isNew: parent.isNew,\n      defaults: parent.$__.$options.defaults\n    });\n  }\n\n  Document.call(this, value, fields, skipId, options);\n\n  if (hasPriorDoc) {\n    for (const key of initedPaths) {\n      if (!this.$__.activePaths.states.modify[key] && !this.$__.activePaths.states.default[key] && !this.$__.$setCalled.has(key)) {\n        const schematype = this.$__schema.path(key);\n        const def = schematype == null ? void 0 : schematype.getDefault(this);\n\n        if (def === void 0) {\n          delete this._doc[key];\n        } else {\n          this._doc[key] = def;\n          this.$__.activePaths.default(key);\n        }\n      }\n    }\n\n    delete options.priorDoc;\n    delete this.$__.$options.priorDoc;\n  }\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nSubdocument.prototype.toBSON = function () {\n  return this.toObject(internalToObjectOptions);\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\n\nSubdocument.prototype.save = function (options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' + 'the document to MongoDB, it only runs save middleware. ' + 'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' + 'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\n\nSubdocument.prototype.$__save = function (fn) {\n  return immediate(() => fn(null, this));\n};\n\nSubdocument.prototype.$isValid = function (path) {\n  if (this.$__parent && this.$basePath) {\n    return this.$__parent.$isValid([this.$basePath, path].join('.'));\n  }\n\n  return Document.prototype.$isValid.call(this, path);\n};\n\nSubdocument.prototype.markModified = function (path) {\n  Document.prototype.markModified.call(this, path);\n\n  if (this.$__parent && this.$basePath) {\n    if (this.$__parent.isDirectModified(this.$basePath)) {\n      return;\n    }\n\n    this.$__parent.markModified([this.$basePath, path].join('.'), this);\n  }\n};\n\nSubdocument.prototype.isModified = function (paths, modifiedPaths) {\n  if (this.$__parent && this.$basePath) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = Array.isArray(paths) ? paths : paths.split(' ');\n      paths = paths.map(p => [this.$basePath, p].join('.'));\n      return this.$__parent.isModified(paths, modifiedPaths);\n    }\n\n    return this.$__parent.isModified(this.$basePath);\n  }\n\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\n\nSubdocument.prototype.$markValid = function (path) {\n  Document.prototype.$markValid.call(this, path);\n\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$markValid([this.$basePath, path].join('.'));\n  }\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.invalidate = function (path, err, val) {\n  // Hack: array subdocuments' validationError is equal to the owner doc's,\n  // so validating an array subdoc gives the top-level doc back. Temporary\n  // workaround for #5208 so we don't have circular errors.\n  if (err !== this.ownerDocument().$__.validationError) {\n    Document.prototype.invalidate.call(this, path, err, val);\n  }\n\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.invalidate([this.$basePath, path].join('.'), err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError') {\n    throw err;\n  }\n\n  return this.ownerDocument().$__.validationError;\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.$ignore = function (path) {\n  Document.prototype.$ignore.call(this, path);\n\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$ignore([this.$basePath, path].join('.'));\n  }\n};\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\n\nSubdocument.prototype.ownerDocument = function () {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this.$__parent;\n\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.$__parent || parent[documentArrayParent]) {\n    parent = parent.$__parent || parent[documentArrayParent];\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nSubdocument.prototype.parent = function () {\n  return this.$__parent;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function (cb) {\n  return cb(null, this);\n};\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\n\nSubdocument.prototype.remove = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  registerRemoveListener(this); // If removing entire doc, no need to remove subdoc\n\n  if (!options || !options.noop) {\n    this.$__parent.set(this.$basePath, null);\n  }\n\n  if (typeof callback === 'function') {\n    callback(null);\n  }\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.populate = function () {\n  throw new Error('Mongoose does not support calling populate() on nested ' + 'docs. Instead of `doc.nested.populate(\"path\")`, use ' + '`doc.populate(\"nested.path\")`');\n};\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}","map":{"version":3,"sources":["/home/lucho/Desktop/Heros-SPA/node_modules/mongoose/lib/types/subdocument.js"],"names":["Document","require","immediate","internalToObjectOptions","promiseOrCallback","documentArrayParent","module","exports","Subdocument","value","fields","parent","skipId","options","$isSingleNested","path","$basePath","hasPriorDoc","priorDoc","initedPaths","_doc","Object","assign","$__schema","discriminatorKey","keys","filter","key","isNew","defaults","$__","$options","call","activePaths","states","modify","default","$setCalled","has","schematype","def","getDefault","prototype","create","toBSON","toObject","save","fn","suppressWarning","console","warn","cb","$__save","$isValid","$__parent","join","markModified","isDirectModified","isModified","paths","modifiedPaths","Array","isArray","split","map","p","$markValid","invalidate","err","val","ownerDocument","validationError","kind","name","$ignore","$parent","$__remove","remove","callback","registerRemoveListener","noop","set","populate","Error","sub","owner","emitRemove","removeListener","emit","constructor","on"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Document = require('../document');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\n\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nmodule.exports = Subdocument;\n\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  this.$isSingleNested = true;\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n  const hasPriorDoc = options != null && options.priorDoc;\n  let initedPaths = null;\n  if (hasPriorDoc) {\n    this._doc = Object.assign({}, options.priorDoc._doc);\n    delete this._doc[this.$__schema.options.discriminatorKey];\n    initedPaths = Object.keys(options.priorDoc._doc || {}).\n      filter(key => key !== this.$__schema.options.discriminatorKey);\n  }\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    options = Object.assign({}, options, {\n      isNew: parent.isNew,\n      defaults: parent.$__.$options.defaults\n    });\n  }\n  Document.call(this, value, fields, skipId, options);\n\n  if (hasPriorDoc) {\n    for (const key of initedPaths) {\n      if (!this.$__.activePaths.states.modify[key] &&\n          !this.$__.activePaths.states.default[key] &&\n          !this.$__.$setCalled.has(key)) {\n        const schematype = this.$__schema.path(key);\n        const def = schematype == null ? void 0 : schematype.getDefault(this);\n        if (def === void 0) {\n          delete this._doc[key];\n        } else {\n          this._doc[key] = def;\n          this.$__.activePaths.default(key);\n        }\n      }\n    }\n\n    delete options.priorDoc;\n    delete this.$__.$options.priorDoc;\n  }\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nSubdocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nSubdocument.prototype.save = function(options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    console.warn('mongoose: calling `save()` on a subdoc does **not** save ' +\n      'the document to MongoDB, it only runs save middleware. ' +\n      'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' +\n      'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nSubdocument.prototype.$__save = function(fn) {\n  return immediate(() => fn(null, this));\n};\n\nSubdocument.prototype.$isValid = function(path) {\n  if (this.$__parent && this.$basePath) {\n    return this.$__parent.$isValid([this.$basePath, path].join('.'));\n  }\n  return Document.prototype.$isValid.call(this, path);\n};\n\nSubdocument.prototype.markModified = function(path) {\n  Document.prototype.markModified.call(this, path);\n\n  if (this.$__parent && this.$basePath) {\n    if (this.$__parent.isDirectModified(this.$basePath)) {\n      return;\n    }\n    this.$__parent.markModified([this.$basePath, path].join('.'), this);\n  }\n};\n\nSubdocument.prototype.isModified = function(paths, modifiedPaths) {\n  if (this.$__parent && this.$basePath) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = (Array.isArray(paths) ? paths : paths.split(' '));\n      paths = paths.map(p => [this.$basePath, p].join('.'));\n\n      return this.$__parent.isModified(paths, modifiedPaths);\n    }\n\n    return this.$__parent.isModified(this.$basePath);\n  }\n\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\nSubdocument.prototype.$markValid = function(path) {\n  Document.prototype.$markValid.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$markValid([this.$basePath, path].join('.'));\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.invalidate = function(path, err, val) {\n  // Hack: array subdocuments' validationError is equal to the owner doc's,\n  // so validating an array subdoc gives the top-level doc back. Temporary\n  // workaround for #5208 so we don't have circular errors.\n  if (err !== this.ownerDocument().$__.validationError) {\n    Document.prototype.invalidate.call(this, path, err, val);\n  }\n\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.invalidate([this.$basePath, path].join('.'), err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError') {\n    throw err;\n  }\n\n  return this.ownerDocument().$__.validationError;\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$ignore = function(path) {\n  Document.prototype.$ignore.call(this, path);\n  if (this.$__parent && this.$basePath) {\n    this.$__parent.$ignore([this.$basePath, path].join('.'));\n  }\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nSubdocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this.$__parent;\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.$__parent || parent[documentArrayParent]) {\n    parent = parent.$__parent || parent[documentArrayParent];\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.parent = function() {\n  return this.$__parent;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function(cb) {\n  return cb(null, this);\n};\n\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\nSubdocument.prototype.remove = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  registerRemoveListener(this);\n\n  // If removing entire doc, no need to remove subdoc\n  if (!options || !options.noop) {\n    this.$__parent.set(this.$basePath, null);\n  }\n\n  if (typeof callback === 'function') {\n    callback(null);\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.nested.populate(\"path\")`, use ' +\n    '`doc.populate(\"nested.path\")`');\n};\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n"]},"metadata":{},"sourceType":"script"}