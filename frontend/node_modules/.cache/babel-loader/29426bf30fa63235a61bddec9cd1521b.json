{"ast":null,"code":"var _jsxFileName = \"/home/lucho/Desktop/Heros-SPA/src/pages/ScreenHeros.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from 'context/SearchContext';\nimport Loading from 'components/Loading';\nimport ListHeros from 'components/ListHeros';\nimport getHeros from 'services/getHeros';\nimport { dynamicSort } from 'utils/sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HerosSearching = () => {\n  _s();\n\n  const {\n    name\n  } = useContext(Context);\n  const history = useHistory();\n  const house = history.location.pathname.split(\"/\")[history.location.pathname.split(\"/\").length - 1];\n  const [loading, setLoading] = useState(false);\n  const [heros, setHeros] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    const response = getHeros({\n      heroName: name,\n      heroHouse: house\n    }).sort(dynamicSort(\"name\"));\n    setHeros(response);\n    setLoading(false);\n  }, [name, house]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(ListHeros, {\n      heros: heros\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n\n_s(HerosSearching, \"edF2WCb6NA7A6/M46UszqAspTLw=\", false, function () {\n  return [useHistory];\n});\n\n_c = HerosSearching;\nexport default HerosSearching;\n\nvar _c;\n\n$RefreshReg$(_c, \"HerosSearching\");","map":{"version":3,"sources":["/home/lucho/Desktop/Heros-SPA/src/pages/ScreenHeros.jsx"],"names":["React","useState","useEffect","useContext","useHistory","Context","Loading","ListHeros","getHeros","dynamicSort","HerosSearching","name","history","house","location","pathname","split","length","loading","setLoading","heros","setHeros","response","heroName","heroHouse","sort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAsCC,UAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACE,OAAD,CAA3B;AACA,QAAMO,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMS,KAAK,GAAGD,OAAO,CAACE,QAAR,CAAiBC,QAAjB,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqCJ,OAAO,CAACE,QAAR,CAAiBC,QAAjB,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqCC,MAArC,GAA8C,CAAnF,CAAd;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMG,QAAQ,GAAGd,QAAQ,CAAC;AAACe,MAAAA,QAAQ,EAACZ,IAAV;AAAgBa,MAAAA,SAAS,EAACX;AAA1B,KAAD,CAAR,CAA4CY,IAA5C,CAAiDhB,WAAW,CAAC,MAAD,CAA5D,CAAjB;AACAY,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALQ,EAKN,CAACR,IAAD,EAAOE,KAAP,CALM,CAAT;AAOA,sBACI;AAAA,cACKK,OAAO,gBACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA,gBAEA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHZ,mBADJ;AAQH,CAxBD;;GAAMV,c;UAGcN,U;;;KAHdM,c;AA0BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect , useContext} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from 'context/SearchContext';\n\nimport Loading from 'components/Loading';\nimport ListHeros from 'components/ListHeros';\n\nimport getHeros from 'services/getHeros';\nimport { dynamicSort } from 'utils/sort';\n\n\nconst HerosSearching = () => {\n    \n    const { name } = useContext(Context)\n    const history = useHistory()\n    const house = history.location.pathname.split(\"/\")[history.location.pathname.split(\"/\").length - 1]\n    \n    const [loading, setLoading] = useState(false)\n    const [heros, setHeros] = useState([])\n\n    useEffect(() => {\n        setLoading(true)\n        const response = getHeros({heroName:name, heroHouse:house }).sort(dynamicSort(\"name\"))\n        setHeros(response)\n        setLoading(false)\n    }, [name, house])\n\n    return (\n        <>\n            {loading\n                ?   <Loading />\n                :   <ListHeros heros={heros}/>\n            }\n        </>\n    )\n}\n\nexport default HerosSearching;"]},"metadata":{},"sourceType":"module"}